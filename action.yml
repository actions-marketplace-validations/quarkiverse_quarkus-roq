name: "Build and Deploy Roq Site"
description: "Sets up JDK, builds the Quarkus site, and deploys it to GitHub Pages."
inputs:
  github-token:
    description: "GitHub token for accessing GitHub Pages"
    required: true
  setup-java:
    description: "Whether to setup Java or not"
    required: false
    default: 'true'
  java-version:
    description: "Java version to use for the build"
    required: false
    default: "21"
  java-distribution:
    description: "Java distribution to use"
    required: false
    default: "temurin"
  maven-executable:
    description: 'Choose whether to use mvn or ./mvnw'
    required: false
    default: './mvnw'
  maven-cache:
    description: "Maven cache strategy"
    required: false
    default: "maven"
  site-url:
    description: "The URL of the site (overrides auto-detected URL if provided)"
    required: false
  site-path:
    description: "The path of the site (overrides auto-detected path if provided)"
    required: false
  maven-build-args:
    description: "Additional Maven build arguments"
    required: false
    default: "-DskipTests"
  artifact-name:
    description: "Name of the artifact to upload"
    required: false
    default: "site"
  artifact-path:
    description: "Path of the artifact to upload"
    required: false
    default: "target/roq"
  retention-days:
    description: "Retention days for the uploaded artifact"
    required: false
    default: "1"
  site-directory:
    description: "The directory containing the Roq site"
    required: false
    default: "./"
runs:
  using: "composite"
  steps:
    # Step 1: Set up Java
    - name: Set up Java
      if: ${{ inputs.setup-java }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ inputs.java-version }}
        distribution: ${{ inputs.java-distribution }}
        cache: ${{ inputs.maven-cache }}

    # Step 2: Get GitHub Pages URL (if not provided as input)
    - name: Get GitHub Pages URL
      shell: bash
      if: ${{ inputs.site-url == null || inputs.site-path == null }}
      id: get_url
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
      run: |
        url=$(gh api "repos/$GITHUB_REPOSITORY/pages" --jq '.html_url')
        path=$(echo "$url" | sed -E 's|https?://[^/]+(/.*)?|\1|')
        url=$(echo "$url" | sed -E 's|(https?://[^/]+).*|\1|')
        if [ -z "$path" ]; then
          path="/"
        fi
        input_url=${{ inputs.site-url }}
        input_path=${{ inputs.site-path }}
        SITE_URL=${input_url:-$url}
        SITE_PATH=${input_path:-$path}
        SITE_DIR=${{ inputs.site-directory }}
        SITE_DIR=${SITE_DIR%/}/
        
        echo "SITE_DIR=$SITE_DIR" >> $GITHUB_ENV
        echo "SITE_URL=$SITE_URL" >> $GITHUB_ENV
        echo "SITE_PATH=$SITE_PATH" >> $GITHUB_ENV
        
        echo "SITE_DIR=$SITE_DIR" >> $GITHUB_OUTPUT
        echo "SITE_URL=$SITE_URL" >> $GITHUB_OUTPUT
        echo "SITE_PATH=$SITE_PATH" >> $GITHUB_OUTPUT

    # Step 3: Build Quarkus Blog with Quarkus HTTP Root Path
    - name: Build & Generate Blog
      shell: bash
      run: |
        cd ${{ env.SITE_DIR }}
        ${{ inputs.maven-executable }} -B package quarkus:run \
          ${{ inputs.maven-build-args }} \
          -Dquarkus.http.root-path=${{ env.SITE_PATH }} \
          -Dsite.url=${{ env.SITE_URL }}
      env:
        QUARKUS_ROQ_GENERATOR_BATCH: true

    # Step 6: Setup GitHub Pages
    - name: Setup Pages
      uses: actions/configure-pages@v5

    # Step 7: Upload Artifact to GitHub Pages
    - name: Upload Artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ${{ env.SITE_DIR }}${{ inputs.artifact-path }}
